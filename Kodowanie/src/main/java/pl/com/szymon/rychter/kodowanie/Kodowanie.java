/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.com.szymon.rychter.kodowanie;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author Szymon
 */
public class Kodowanie extends javax.swing.JFrame {

    /**
     * Creates new form Kodowanie
     */
    public Kodowanie() {
        initComponents();
        jL_code_error.setText("");
        jL_decode_error.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jP_code = new javax.swing.JPanel();
        jL_code_text = new javax.swing.JLabel();
        jTF_code_text = new javax.swing.JTextField();
        jL_code_key = new javax.swing.JLabel();
        jTF_code_key = new javax.swing.JTextField();
        jB_code_code = new javax.swing.JButton();
        jL_code_result = new javax.swing.JLabel();
        jTF_code_result = new javax.swing.JTextField();
        jL_code_error = new javax.swing.JLabel();
        jP_decode = new javax.swing.JPanel();
        jL_decode_text = new javax.swing.JLabel();
        jTF_decode_text = new javax.swing.JTextField();
        jL_decode_key = new javax.swing.JLabel();
        jTF_decode_key = new javax.swing.JTextField();
        jB_decode_decode = new javax.swing.JButton();
        jL_decode_result = new javax.swing.JLabel();
        jTF_decode_result = new javax.swing.JTextField();
        jL_decode_error = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jL_code_text.setText("Tekst do zakodowania:");

        jL_code_key.setText("Klucz:");

        jB_code_code.setText("Zakoduj");
        jB_code_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_code_codeActionPerformed(evt);
            }
        });

        jL_code_result.setText("Wynik:");

        jTF_code_result.setEditable(false);

        jL_code_error.setText("err");

        javax.swing.GroupLayout jP_codeLayout = new javax.swing.GroupLayout(jP_code);
        jP_code.setLayout(jP_codeLayout);
        jP_codeLayout.setHorizontalGroup(
            jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_codeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jP_codeLayout.createSequentialGroup()
                        .addComponent(jB_code_code, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jL_code_error, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(jP_codeLayout.createSequentialGroup()
                        .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jL_code_key, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jL_code_text, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jL_code_result, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jP_codeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTF_code_text, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(jTF_code_key))
                                .addGap(41, 41, 41))
                            .addGroup(jP_codeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTF_code_result, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jP_codeLayout.setVerticalGroup(
            jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_codeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_code_text, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_code_text))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_code_key, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_code_key))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jB_code_code)
                    .addComponent(jL_code_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jP_codeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_code_result, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_code_result))
                .addGap(169, 169, 169))
        );

        jTabbedPane1.addTab("Kodowanie", jP_code);

        jL_decode_text.setText("Tekst do odkodowania:");

        jL_decode_key.setText("Klucz:");

        jB_decode_decode.setText("Odkoduj");
        jB_decode_decode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_decode_decodeActionPerformed(evt);
            }
        });

        jL_decode_result.setText("Wynik:");

        jTF_decode_result.setEditable(false);

        jL_decode_error.setText("err");

        javax.swing.GroupLayout jP_decodeLayout = new javax.swing.GroupLayout(jP_decode);
        jP_decode.setLayout(jP_decodeLayout);
        jP_decodeLayout.setHorizontalGroup(
            jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_decodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jP_decodeLayout.createSequentialGroup()
                        .addComponent(jB_decode_decode, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jL_decode_error, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jP_decodeLayout.createSequentialGroup()
                        .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jL_decode_result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jL_decode_key, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jL_decode_text, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTF_decode_text, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(jTF_decode_key))
                            .addComponent(jTF_decode_result, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
        );
        jP_decodeLayout.setVerticalGroup(
            jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_decodeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_decode_text, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_decode_text))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_decode_key, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_decode_key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jB_decode_decode)
                    .addComponent(jL_decode_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jP_decodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_decode_result, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF_decode_result))
                .addGap(169, 169, 169))
        );

        jTabbedPane1.addTab("Dekodowanie", jP_decode);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jB_code_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_code_codeActionPerformed
        String text = jTF_code_text.getText();
        String keyStr = jTF_code_key.getText();
        boolean err = false;
        
        if(keyStr.equals("")) {
            jL_code_error.setText("Podaj klucz");
            err = true;
        }
        if(text.equals("")) {
            jL_code_error.setText("Podaj teskt do zakodowania");
            err = true;
        }
        
        if(!err){
            int key = calcKey(keyStr);
            
            jL_code_error.setText("");
            jTF_code_result.setText(code(text, key));
        }
    }//GEN-LAST:event_jB_code_codeActionPerformed

    private void jB_decode_decodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_decode_decodeActionPerformed
        String text = jTF_decode_text.getText();
        String keyStr = jTF_decode_key.getText();
        boolean err = false;
        
        if(keyStr.equals("")) {
            jL_decode_error.setText("Podaj klucz");
            err = true;
        }
        if(text.equals("")) {
            jL_decode_error.setText("Podaj teskt do odkodowania");
            err = true;
        }
        
        if(!err){
            int key = calcKey(keyStr);
            
            jL_decode_error.setText("");
            jTF_decode_result.setText(decode(text, key));
        }
    }//GEN-LAST:event_jB_decode_decodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kodowanie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kodowanie().setVisible(true);
            }
        });
    }
    
    private int calcKey(String text) {
        int sum = 0;
        for(int i=0; i<text.length(); i++) {
            sum += text.charAt(i);
        }
        int res = Math.round(sum/text.length()); 

        return res;
    }
    
    private String code(String text, int key) {
        String result = "";
        for(int i=0; i<text.length(); i++){
            char ch = text.charAt(i);
            result += (ch+key)+", ";
        }
        
        result = result.substring(0, result.length()-2);
        
        saveToFile(result);
        return result;
    }

    private String decode(String text, int key) {
        String result = "";
        
        String[] arr = text.split(", ");
        
        for(int i=0; i<arr.length; i++) {
            char ch = (char) Integer.parseInt(arr[i]);
            result += (char) (ch-key);
        }

        return result;
    }
    
    private void saveToFile(String result) {
        File f = new File("dane.txt");
        try{
            FileWriter fw = new FileWriter(f, true);
            
            fw.write(result+"\n");
            fw.close();
        } catch(IOException exc) {
            System.out.println(exc.toString());
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_code_code;
    private javax.swing.JButton jB_decode_decode;
    private javax.swing.JLabel jL_code_error;
    private javax.swing.JLabel jL_code_key;
    private javax.swing.JLabel jL_code_result;
    private javax.swing.JLabel jL_code_text;
    private javax.swing.JLabel jL_decode_error;
    private javax.swing.JLabel jL_decode_key;
    private javax.swing.JLabel jL_decode_result;
    private javax.swing.JLabel jL_decode_text;
    private javax.swing.JPanel jP_code;
    private javax.swing.JPanel jP_decode;
    private javax.swing.JTextField jTF_code_key;
    private javax.swing.JTextField jTF_code_result;
    private javax.swing.JTextField jTF_code_text;
    private javax.swing.JTextField jTF_decode_key;
    private javax.swing.JTextField jTF_decode_result;
    private javax.swing.JTextField jTF_decode_text;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
